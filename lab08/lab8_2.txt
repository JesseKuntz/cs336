Jesse Kuntz

A.
    i. Components fit inside each other, that is what makes the UI composable. CommentList and CommentForm fit inside CommentBox, and Comment fits inside CommentList. It matters because then everything is easy to maintain and change.
    ii. JSX is a preprocessor that makes it easier to create React components using HTML syntax instead of plain JS.
    iii. Comments are loaded through the server using an AJAX call. They are created by grabbing the data from the form and assigning an ID, and then they are saved through another AJAX call handled by the server to POST the comment to the comments.json file.
    iv. Props are immutable, while state is mutable. Props are "owned" by the parent, and are not meant to be changes. It is state that gives the user the ability to "change" the application automatically. Components wait for certain states, and then the application re-renders itself.

B.
    i. The comments on the application are automatically changed. As soon as valid JSON arrives, the application displays it because it is constantly looking at comments.json for changes. However, whenever the submit button is clicked the program will also "optimistically" update the app before the request is complete.
    ii. It changes the state instead of calling render because asynchronously grabbing the data is faster.
    iii. Components should represent the state of the view because if something goes wrong, it makes it much harder to debug. Also, everything feels much more cohesive.
    iv. More often than not, the comments will get accepted. Since people like things fast, this is a better solution than waiting for the comments to show up after they have been accepted by the server. On the off chance that they are rejected, usually there will be error messages in place that explain why it was rejected (instead of just deleting it).